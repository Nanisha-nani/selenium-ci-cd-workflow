# name: CI

# on:
#   push:
#     branches: [ main ]
#     tags:
#       - 'v*.*.*'
#     paths:
#       - 'src/**'
#       - 'tests/**'
#   pull_request:
#     branches: [ main ]
#   schedule:
#     - cron: '0 0 * * *'  # Runs daily at noon UTC

# jobs:
#   build:
#     runs-on: ubuntu-latest

#     strategy:
#       matrix:
#         python-version: [3.10, 3.11]  # Ensure these versions are supported

#     env:
#       BASE_URL: "https://www.example.com"

#     steps:
#     - uses: actions/checkout@v3

#     - name: Cache pip
#       uses: actions/cache@v3
#       with:
#         path: ~/.cache/pip
#         key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
#         restore-keys: |
#           ${{ runner.os }}-pip-

#     - name: Set up Python ${{ matrix.python-version }}
#       uses: actions/setup-python@v4
#       with:
#         python-version: ${{ matrix.python-version }}

#     - name: Install dependencies
#       run: |
#         python -m pip install --upgrade pip
#         pip install -r requirements.txt
#         pip install pytest-html pytest-cov flake8 bandit pytest-xdist

#     - name: Lint code
#       run: |
#         flake8 . > flake8.log || true  # Capture output and prevent failure
#         cat flake8.log  # Display lint results

#     - name: Security Scan
#       run: |
#         bandit -r . -f json -o bandit_report.json || true  # Output to JSON file

#     - name: Run tests
#       run: |
#         pytest --headless --html=report-${{ matrix.python-version }}.html --cov=./ -n auto

#     - name: Upload Test Report
#       uses: actions/upload-artifact@v3
#       with:
#         name: test-report-${{ matrix.python-version }}
#         path: report-${{ matrix.python-version }}.html

#     - name: Upload Coverage Report
#       uses: actions/upload-artifact@v3
#       with:
#         name: coverage-report-${{ matrix.python-version }}
#         path: coverage.xml

#     - name: Upload Lint Report
#       if: failure()  # Upload lint report only if linting fails
#       uses: actions/upload-artifact@v3
#       with:
#         name: lint-report
#         path: flake8.log
